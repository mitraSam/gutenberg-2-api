
scalar DateTime

type Book{
title: String!
author: String!
created: DateTime!
wiki: String
url:String
epigraph:String
license: String
source:String
credits:[String]
chapters: [Chapter]
}
type Chapter{
    title: String
    pages: [Page]
    pagination:[Boolean]
}

type Page{
    pageNr: Boolean
    content: String
}
type User{
githubLogin: String!
name: String!
}

type AuthPayLoad{
    token: String!
    user: User!
}

type Notification{
    message:String
}
type Subscription{
    uploadingBook:Notification
}

type Query{
book(title:String!): Book
totalBooks: Int!
}
input UploadBookInput{
       title:String
        author:String
            file: Upload!
        source:String
        url:String
        credits: [String]
        license:String
}
type Mutation{
    uploadBook(input:UploadBookInput!): Book
}