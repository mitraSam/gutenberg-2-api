
scalar DateTime

type Book{
title: String!
author: String!
created: DateTime!
wikiData: String
url:String
epigraph:String
license: String
source:String
credits:[String]
chapters: [Chapter]
    chapterTitles: [String]
}
type Chapter{
    title: String
    pages: [Page!]
    pagination:[Int!]
}

type Page{
    pageNr: Int!
    content: String!
}
type User{
email: String!
username: String!
}

type AuthPayLoad{
    token: String!
    user: User!
}

type Notification{
    message:String
}
type Subscription{
    uploadingBook:Notification
}

type Query{
book(title:String!): Book
totalBooks: Int!
bookDetails(title:String!):Book
bookChapter(title:String! chapterTitle:String!): Book
    recentBooks:[Book]
}

input UploadBookInput{
       title:String
        author:String
            file: Upload!
        source:String
        url:String
        credits: [String]
        license:String
    epigraph:String
}
input RegisterUserInput{
email: String!
username: String!
    password: String!
}
type Mutation{
    uploadBook(input:UploadBookInput!): Book
    registerUser(input:RegisterUserInput!):String
    loginUser(username:String! password:String): String
}